name: Create and publish a Docker image

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Build version number"
        required: true
        type: string
      isLatest:
        description: "Whether to tag as latest"
        required: false
        type: boolean
        default: false

jobs:
  build-antd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          repository: ant-design/ant-design
          ref: ${{ inputs.tag }}

      - name: Echo Input Tag
        run: npx console-figlet@1.1.0 ${{ inputs.tag }} --font="Slant Relief"

      - name: create package-lock.json
        run: npm i --package-lock-only --ignore-scripts

      - name: Install dependencies
        run: npm ci

      - name: Build Site
        id: site
        run: npm run site
        env:
          SITE_ENV: development
          NODE_OPTIONS: "--max_old_space_size=4096"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: antd-site
          path: _site
          retention-days: 3

  build-and-push-image:
    needs: build-antd
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: wxh16144
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate build args
        id: build-args
        env:
          ANTD_LATEST_TAG: ${{ inputs.isLatest }}
        run: |
          echo "tags=$(bash generate_tags.sh wxh16144/antd ${{ inputs.tag }})" >> $GITHUB_OUTPUT

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: antd-site
          path: _site

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./CI.Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.build-args.outputs.tags }}
